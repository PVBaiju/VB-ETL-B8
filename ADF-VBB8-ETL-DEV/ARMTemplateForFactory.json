{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-VBB8-ETL-DEV"
		},
		"LSSqlServermig_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LSSqlServermig'"
		},
		"LS_AZADLS_JSONFLAT_METADATA_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZADLS_JSONFLAT_METADATA'"
		},
		"LS_AZADLS_SFTP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZADLS_SFTP'"
		},
		"LS_AZADLS_SFTP_COPY_SRC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZADLS_SFTP_COPY_SRC'"
		},
		"LS_AZADLS_VBSRC_SINK_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZADLS_VBSRC_SINK'"
		},
		"LS_AZADLS_VB_RAW001_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZADLS_VB_RAW001'"
		},
		"LS_AZADLS_VB_SINK_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZADLS_VB_SINK'"
		},
		"LS_AZSQLDB_METADATA_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQLDB_METADATA'"
		},
		"LS_CSV_ENT_TRGGR_01_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_CSV_ENT_TRGGR_01'"
		},
		"LS_CSV_ENT_TRGGR_02_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_CSV_ENT_TRGGR_02'"
		},
		"LSSqlServermig_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-ZATNEVE"
		},
		"LSSqlServermig_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_ecom_db"
		},
		"LSSqlServermig_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vbtest"
		},
		"LS_AZADLS_JSONFLAT_METADATA_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvisionboardraw01.dfs.core.windows.net/"
		},
		"LS_AZADLS_SFTP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "adlsdevvisionboardraw01.blob.core.windows.net"
		},
		"LS_AZADLS_SFTP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adlsdevvisionboardraw01.sftpuser"
		},
		"LS_AZADLS_SFTP_COPY_SRC_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "adlsdevvisionboardraw01.blob.core.windows.net"
		},
		"LS_AZADLS_SFTP_COPY_SRC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adlsdevvisionboardraw01.sftpuser"
		},
		"LS_AZADLS_VBSRC_SINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsrc01.dfs.core.windows.net/"
		},
		"LS_AZADLS_VB_CLOUD_CSV_SINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().storage_account_loc}"
		},
		"LS_AZADLS_VB_CLOUD_RAW_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().storage_account_loc}"
		},
		"LS_AZADLS_VB_EXCEL_CLOUD_COPY_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().storage_account_loc}"
		},
		"LS_AZADLS_VB_RAW001_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvisionboardraw01.dfs.core.windows.net/"
		},
		"LS_AZADLS_VB_SINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsrc01.dfs.core.windows.net/"
		},
		"LS_AZSQLDB_METADATA_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev.database.windows.net"
		},
		"LS_AZSQLDB_METADATA_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQLDB_METADATA_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_CSV_ENT_TRGGR_01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvisionboardraw01.dfs.core.windows.net/"
		},
		"LS_CSV_ENT_TRGGR_02_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsrc01.dfs.core.windows.net/"
		},
		"LS_RESTAPI_SRC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://retool.com/utilities/generate-api-from-csv"
		},
		"TRG_EVENT_CSV_01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/84c07c0f-6610-4eb2-8c7e-f1890653e188/resourceGroups/VB_DEV_B8_ETL/providers/Microsoft.Storage/storageAccounts/adlsdevvisionboardraw01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL10_BULK_FOLDERS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_CHILD_META",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZADLS_BULK_META",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_CSV",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get_CHILD_META",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_CHILD_META').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter_JSON",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get_CHILD_META",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_CHILD_META').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.json' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CSV_Iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_CSV').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyCSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZADLS_BULK_COPY_RAW",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZADLS_COPY_CSV_SINK",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@concat(replace(item().name,'.csv',''),'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.csv')",
												"folder": {
													"value": "@concat(\n    'csv/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "JSON_Iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_JSON').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyJSON",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_AZADLS_BULKCOPY_JSON_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZADLS_BULKCOPY_JSON_SINK",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@concat(replace(item().name,'.json',''),'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.json')",
												"folder": {
													"value": "@concat(\n    'json/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_BULK_META')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_BULK_COPY_RAW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_COPY_CSV_SINK')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_BULKCOPY_JSON_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_BULKCOPY_JSON_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL11_EVNT_TRGGR_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY_CSV_EVNT_TRIGGR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_STGEVENT_TRG_01",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.folder",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_STGEVENT_TRG_02",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@concat(replace(pipeline().parameters.filename, '.csv', ''), '_', formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss'), '.csv')",
										"type": "Expression"
									},
									"folder": {
										"value": "@concat('event_trigger_csv/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), 'MM'), '/', formatDateTime(utcNow(), 'dd'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_STGEVENT_TRG_01')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_STGEVENT_TRG_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL1_MASTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EXEC_RAW_DATA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_VAR_TRIGGER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL2_RAW_DATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Trigger": {
									"value": "@pipeline().parameters.Trigger",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SET_VAR_TRIGGER",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Trigger_variable",
							"value": {
								"value": "@if(equals(pipeline().parameters.Trigger, null),pipeline().TriggerName,pipeline().parameters.Trigger)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Trigger_variable": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL2_RAW_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL2_RAW_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_L2_TYPE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L2_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWITCH_SOURCE",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_L2_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_L2_TYPE').output.firstRow.L2_switch_type",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "CloudStorage",
									"activities": [
										{
											"name": "EXEC_PL3_DATA",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL3_CLOUDSG_CSV_EXCEL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "api",
									"activities": [
										{
											"name": "Wait7",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "sql",
									"activities": [
										{
											"name": "EXE_SQL MIGRATION",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL6_SQL_MIgration",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "sftp",
									"activities": [
										{
											"name": "EXEC_SFTP_PL",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL7_SFTP",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "snowflake",
									"activities": [
										{
											"name": "Wait6",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "json",
									"activities": [
										{
											"name": "EXEC JSOC FLAT CSV",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL9_JSON_FLAT",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "bulk",
									"activities": [
										{
											"name": "Exec_BULK_DIFF_FOLDER",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL10_BULK_FOLDERS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/pipelines/PL3_CLOUDSG_CSV_EXCEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL6_SQL_MIgration')]",
				"[concat(variables('factoryId'), '/pipelines/PL7_SFTP')]",
				"[concat(variables('factoryId'), '/pipelines/PL9_JSON_FLAT')]",
				"[concat(variables('factoryId'), '/pipelines/PL10_BULK_FOLDERS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL3_CLOUDSG_CSV_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_SRC_FILES",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L3_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch_SRC_LOC_CSV_EXCEL",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_SRC_FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_SRC_FILES').output.firstRow.L3_switch_type",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Azure",
									"activities": [
										{
											"name": "Exec_file_CSV",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL4_FILETYPE_CSV_EXCEL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "aws",
									"activities": [
										{
											"name": "Wait2",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "gcp",
									"activities": [
										{
											"name": "Wait3",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/pipelines/PL4_FILETYPE_CSV_EXCEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL4_1_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP-START-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LKUP_JOB_DETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_start_log_entry]",
							"storedProcedureParameters": {
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKUP_JOB_DETAILS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[vb_get_job_dtls]",
								"storedProcedureParameters": {
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Trigger",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SET_MAPPING_VARIABLE",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Mapping",
							"value": "{\n    \"type\": \"TabularTranslator\",\n    \"mappings\": [\n        {\n            \"source\": {\n                \"name\": \"order_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderID\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"customer_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"CustomerID\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_status\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderStatus\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_purchase_timestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderPurchaseTimestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_approved_at\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderApprovedAt\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_delivered_carrier_date\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderDeliveredCarrierDate\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_delivered_customer_date\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderDeliveredCustomerDate\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_estimated_delivery_date\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"OrderEstimatedDeliveryDate\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        }\n    ],\n    \"typeConversion\": true,\n    \"typeConversionSettings\": {\n        \"allowDataTruncation\": true,\n        \"treatBooleanAsNumber\": false\n    }\n}\n"
						}
					},
					{
						"name": "COPY-CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SET_MAPPING_VARIABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SP-START-LOG-ENTRY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZADLS_CSVCOPY_CLOUD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"Storage_account_loc": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.sourcedata",
										"type": "Expression"
									},
									"col_delimiter": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.delimiter",
										"type": "Expression"
									},
									"filename": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.sourcefile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZADLS_PRQT_CLOUD_CSV_SINK",
								"type": "DatasetReference",
								"parameters": {
									"storage_account_loc": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.targetdata",
										"type": "Expression"
									},
									"directory": {
										"value": "@concat(\n    activity('LKUP_JOB_DETAILS').output.firstRow.targetdirectory, '/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd'), '/'\n)\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SP-SUCESS-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY-CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": null,
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP-FAIL-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY-CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": {
										"value": "@activity('COPY-CSV').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_CSVCOPY_CLOUD_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_PRQT_CLOUD_CSV_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL4_2_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP-START-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LKUP_JOB_DETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_start_log_entry]",
							"storedProcedureParameters": {
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKUP_JOB_DETAILS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[vb_get_job_dtls]",
								"storedProcedureParameters": {
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Trigger",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "COPY-EXCEL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SP-START-LOG-ENTRY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZADLS_EXCELCOPY_CLOUD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"storage_account_loc": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.sourcedata",
										"type": "Expression"
									},
									"sheetname": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.sheetname",
										"type": "Expression"
									},
									"filename": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.sourcefile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZADLS_PRQT_CLOUD_CSV_SINK",
								"type": "DatasetReference",
								"parameters": {
									"storage_account_loc": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.targetdata",
										"type": "Expression"
									},
									"directory": {
										"value": "@concat(\n    activity('LKUP_JOB_DETAILS').output.firstRow.targetdirectory, '/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd'), '/'\n)\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SP-SUCESS-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY-EXCEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": null,
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP-FAIL-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY-EXCEL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": {
										"value": "@activity('COPY-EXCEL').error.message\n\n",
										"type": "Expression"
									},
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_METADATA",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_EXCELCOPY_CLOUD_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_PRQT_CLOUD_CSV_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL4_FILETYPE_CSV_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_GET_FILETYPE_CSV_EXCEL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L4_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Switch_CSV_EXCEL_FILES",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_GET_FILETYPE_CSV_EXCEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_GET_FILETYPE_CSV_EXCEL').output.firstRow.L4_switch_type",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "csv",
									"activities": [
										{
											"name": "EXEC_PL4_1_CSV",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL4_1_CSV",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "excel",
									"activities": [
										{
											"name": "EXEC_PL4_2_EXCEL",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL4_2_EXCEL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_METADATA')]",
				"[concat(variables('factoryId'), '/pipelines/PL4_1_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/PL4_2_EXCEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL6_SQL_MIgration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP SQL TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA ,TABLE_NAME FROM information_schema.TABLES\nwhere table_type ='base table' and table_schema ='dbo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLSRV_MIGRATION_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH TABLE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKUP SQL TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKUP SQL TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "COPY SQL TABLES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SHIR_SQL_SRCMIGRA_DYNA",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SHIR_SQL_MIGRATION_SINK",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().TABLE_SCHEMA, '_', item().TABLE_NAME, '_', formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'), '.csv')\n",
													"type": "Expression"
												},
												"folder": {
													"value": "@concat(\n    'sqltable/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd')\n)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSRV_MIGRATION_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_SQL_SRCMIGRA_DYNA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_SQL_MIGRATION_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL7_SFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET_CHILD_METADATA",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZADLS_SFTP_RAW",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET_CHILD_METADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_CHILD_METADATA').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Getlastmod",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZADLS_SFTP_LASTMODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false,
											"disableChunking": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Getlastmod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Getlastmod').output.lastModified,variables('Refdatetime'))\n\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Refdatetime",
													"value": {
														"value": "@activity('Getlastmod').output.lastModified",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set variable1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "latestfile",
													"value": {
														"value": "@activity('Getlastmod').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "COPY DYNA SFTP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEachFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AZADLS_SFTP_SRC",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@variables('latestfile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZADLS_SFTP_SINK",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@variables('latestfile')",
										"type": "Expression"
									},
									"folder": {
										"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"latestfile": {
						"type": "String"
					},
					"Refdatetime": {
						"type": "String",
						"defaultValue": "1800-01-01 00:00:00"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_SFTP_RAW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_SFTP_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_SFTP_SINK')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_SFTP_LASTMODIFIED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL9_JSON_FLAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET_JSON_META",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZADLS_JSON_VB_META",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Filter_JSON",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET_JSON_META",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_JSON_META').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.json' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_JSON').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "COPY JSON FLAT CSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['_id']"
													},
													"sink": {
														"name": "_id"
													}
												},
												{
													"source": {
														"path": "$['index']"
													},
													"sink": {
														"name": "index"
													}
												},
												{
													"source": {
														"path": "$['guid']"
													},
													"sink": {
														"name": "guid"
													}
												},
												{
													"source": {
														"path": "$['isActive']"
													},
													"sink": {
														"name": "isActive"
													}
												},
												{
													"source": {
														"path": "$['balance']"
													},
													"sink": {
														"name": "balance"
													}
												},
												{
													"source": {
														"path": "$['picture']"
													},
													"sink": {
														"name": "picture"
													}
												},
												{
													"source": {
														"path": "$['age']"
													},
													"sink": {
														"name": "age"
													}
												},
												{
													"source": {
														"path": "$['eyeColor']"
													},
													"sink": {
														"name": "eyeColor"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "name"
													}
												},
												{
													"source": {
														"path": "$['gender']"
													},
													"sink": {
														"name": "gender"
													}
												},
												{
													"source": {
														"path": "$['company']"
													},
													"sink": {
														"name": "company"
													}
												},
												{
													"source": {
														"path": "$['email']"
													},
													"sink": {
														"name": "email"
													}
												},
												{
													"source": {
														"path": "$['phone']"
													},
													"sink": {
														"name": "phone"
													}
												},
												{
													"source": {
														"path": "$['address']"
													},
													"sink": {
														"name": "address"
													}
												},
												{
													"source": {
														"path": "$['about']"
													},
													"sink": {
														"name": "about"
													}
												},
												{
													"source": {
														"path": "$['registered']"
													},
													"sink": {
														"name": "registered"
													}
												},
												{
													"source": {
														"path": "$['latitude']"
													},
													"sink": {
														"name": "latitude"
													}
												},
												{
													"source": {
														"path": "$['longitude']"
													},
													"sink": {
														"name": "longitude"
													}
												},
												{
													"source": {
														"path": "$['tags'][0]"
													},
													"sink": {
														"name": "items"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "friends'][0]['name"
													}
												},
												{
													"source": {
														"path": "$['greeting']"
													},
													"sink": {
														"name": "greeting"
													}
												},
												{
													"source": {
														"path": "$['favoriteFruit']"
													},
													"sink": {
														"name": "favoriteFruit"
													}
												}
											],
											"collectionReference": "$['friends']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZADLS_JSON_VB_RAW",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZADLS_CSV_VB_SINK",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder": {
													"value": "@concat(\n    'json/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_JSON_VB_META')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_JSON_VB_RAW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZADLS_CSV_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BULKTable_migr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP SQL TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA ,TABLE_NAME FROM information_schema.TABLES\nwhere table_type ='base table' and table_schema ='dbo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLSRV_MIGRATION_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH TABLE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKUP SQL TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKUP SQL TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "COPY SQL TABLES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SHIR_SQL_SRCMIGRA_DYNA",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SHIR_SQL_MIGRATION_SINK",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().TABLE_SCHEMA, '_', item().TABLE_NAME, '.csv_', formatDateTime(utcNow(), 'yyyy-MM-dd HH-mm-ss'), '.csv')\n",
													"type": "Expression"
												},
												"folder": {
													"value": "@concat(\n    'sqltable/',\n    formatDateTime(utcNow(), 'yyyy'), '/',\n    formatDateTime(utcNow(), 'MM'), '/',\n    formatDateTime(utcNow(), 'dd')\n)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "COPY SQL TABLE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLSRV_MIGRATION_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSRV_MIGRATION_PRQUT",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/')",
										"type": "Expression"
									},
									"filename": "sqldb"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSRV_MIGRATION_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSRV_MIGRATION_PRQUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_SQL_SRCMIGRA_DYNA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_SQL_MIGRATION_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_STGEVENT_TRG_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CSV_ENT_TRGGR_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "customer_unique_id",
						"type": "String"
					},
					{
						"name": "customer_zip_code_prefix",
						"type": "String"
					},
					{
						"name": "customer_city",
						"type": "String"
					},
					{
						"name": "customer_state",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_CSV_ENT_TRGGR_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_STGEVENT_TRG_02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CSV_ENT_TRGGR_02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_CSV_ENT_TRGGR_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_BULKCOPY_JSON_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "ouput"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_BULKCOPY_JSON_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_RAW001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_RAW001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_BULK_COPY_RAW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_RAW001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_RAW001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_BULK_META')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_JSONFLAT_METADATA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_JSONFLAT_METADATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_COPY_CSV_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_CSVCOPY_CLOUD_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_CSVCOPY_CLOUD_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_CLOUD_RAW",
					"type": "LinkedServiceReference",
					"parameters": {
						"storage_account_loc": {
							"value": "@dataset().Storage_account_loc",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Storage_account_loc": {
						"type": "string"
					},
					"col_delimiter": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"columnDelimiter": {
						"value": "@dataset().col_delimiter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_CLOUD_RAW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_CSV_VB_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(replace(dataset().filename,'.csv',''),'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_EXCELCOPY_CLOUD_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_EXCEL_CLOUD_COPY",
					"type": "LinkedServiceReference",
					"parameters": {
						"storage_account_loc": {
							"value": "@dataset().storage_account_loc",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storage_account_loc": {
						"type": "string"
					},
					"sheetname": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheetname",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "input"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_EXCEL_CLOUD_COPY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_JSON_VB_META')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_RAW001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_RAW001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_JSON_VB_RAW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_RAW001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_RAW001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_PRQT_CLOUD_CSV_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_CLOUD_CSV_SINK",
					"type": "LinkedServiceReference",
					"parameters": {
						"storage_account_loc": {
							"value": "@dataset().storage_account_loc",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storage_account_loc": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_CLOUD_CSV_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_SFTP_LASTMODIFIED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "/sftp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_SFTP_RAW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_SFTP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/sftp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_SFTP_RAW_COPY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_SFTP_COPY_SRC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_SFTP_COPY_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_SFTP_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(replace(dataset().filename,'.csv',''),'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "sftp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZADLS_SFTP_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_SFTP_COPY_SRC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "/sftp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_SFTP_COPY_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_METADATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_METADATA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_METADATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLSRV_MIGRATION_PRQUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VBSRC_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(replace(dataset().filename,'.parquet',''),'_',formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss'),'.parquet')\n",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VBSRC_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLSRV_MIGRATION_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSSqlServermig",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "order_id",
						"type": "nvarchar"
					},
					{
						"name": "customer_id",
						"type": "nvarchar"
					},
					{
						"name": "order_status",
						"type": "nvarchar"
					},
					{
						"name": "order_purchase_timestamp",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "order_approved_at",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "order_delivered_carrier_date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "order_delivered_customer_date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "order_estimated_delivery_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "order_dataset"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSSqlServermig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EVNTTRG_META')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_RAW001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ingress",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_RAW001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SHIR_SQL_MIGRATION_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZADLS_VB_SINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "customer_unique_id",
						"type": "String"
					},
					{
						"name": "customer_zip_code_prefix",
						"type": "String"
					},
					{
						"name": "customer_city",
						"type": "String"
					},
					{
						"name": "customer_state",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZADLS_VB_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SHIR_SQL_SRCMIGRA_DYNA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSSqlServermig",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSSqlServermig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSSqlServermig')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LSSqlServermig_properties_typeProperties_server')]",
					"database": "[parameters('LSSqlServermig_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LSSqlServermig_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LSSqlServermig_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-ONPREM-SQL",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-ONPREM-SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_JSONFLAT_METADATA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Getting Metadata Related details of Jason file in input folder of adlsdevvisionboardraw01",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_JSONFLAT_METADATA_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_JSONFLAT_METADATA_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_SFTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LS_AZADLS_SFTP",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LS_AZADLS_SFTP_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_AZADLS_SFTP_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_SFTP_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_SFTP_COPY_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LS_AZADLS_SFTP_COPY_SRC_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_AZADLS_SFTP_COPY_SRC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_SFTP_COPY_SRC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VBSRC_SINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SINK AZURE ADLS \"adlsdevvbsrc01\"",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VBSRC_SINK_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_VBSRC_SINK_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VB_CLOUD_CSV_SINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storage_account_loc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VB_CLOUD_CSV_SINK_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VB_CLOUD_RAW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storage_account_loc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VB_CLOUD_RAW_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VB_EXCEL_CLOUD_COPY')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storage_account_loc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VB_EXCEL_CLOUD_COPY_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VB_RAW001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VB_RAW001_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_VB_RAW001_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZADLS_VB_SINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADLS GEN 2 SINK",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZADLS_VB_SINK_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZADLS_VB_SINK_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB_METADATA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "link for taking meta from table",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQLDB_METADATA_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQLDB_METADATA_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQLDB_METADATA_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQLDB_METADATA_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_CSV_ENT_TRGGR_01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "RAW LINKSET",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_CSV_ENT_TRGGR_01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_CSV_ENT_TRGGR_01_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_CSV_ENT_TRGGR_02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SINK LINKSET",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_CSV_ENT_TRGGR_02_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_CSV_ENT_TRGGR_02_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_RESTAPI_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_RESTAPI_SRC_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_EVENT_CSV_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "When CSV file lands in ingress folder it will moved to ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL11_EVNT_TRGGR_CSV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/ingress",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TRG_EVENT_CSV_01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL11_EVNT_TRGGR_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-ONPREM-SQL')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}